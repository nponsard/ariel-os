[workspace]
members = [
  "examples/*",
  "src/lib/rbi",
  "src/lib/ringbuffer",
  "src/lib/coapcore",
  "src/ariel-os",
  "src/ariel-os-alloc",
  "src/ariel-os-bench",
  "src/ariel-os-boards",
  "src/ariel-os-buildinfo",
  "src/ariel-os-coap",
  "src/ariel-os-debug",
  "src/ariel-os-debug-log",
  "src/ariel-os-embassy-common",
  "src/ariel-os-esp",
  "src/ariel-os-hal",
  "src/ariel-os-identity",
  "src/ariel-os-macros",
  "src/ariel-os-nrf",
  "src/ariel-os-power",
  "src/ariel-os-random",
  "src/ariel-os-rp",
  "src/ariel-os-sensors",
  "src/ariel-os-stm32",
  "src/ariel-os-storage",
  "tests/benchmarks/bench_sched_flags",
  "tests/benchmarks/bench_sched_yield",
  "tests/coap",
  "tests/coap-blinky",
  "tests/gpio",
  "tests/gpio-interrupt-nrf",
  "tests/gpio-interrupt-stm32",
  "tests/i2c-controller",
  "tests/spi-loopback",
  "tests/spi-main",
  "tests/threading-dynamic-prios",
  "tests/threading-lock",
  "tests/threading-mutex",
  "tests/threading-fpu",
  "tests/uart-loopback",
]

exclude = ["src/lib", "doc"]

default-members = ["examples/hello-world"]
resolver = "3"

[workspace.package]
license = "MIT OR Apache-2.0"
edition = "2024"
# This should be the ArielÂ OS MSRV.
# Some crates may have a different MSRV.
rust-version = "1.85"
repository = "https://github.com/ariel-os/ariel-os"

[workspace.dependencies]
cfg-if = { version = "1.0.0" }
cortex-m = { version = "0.7", default-features = false, features = [
  "inline-asm",
] }
cortex-m-rt = { version = "0.7.5" }
cortex-m-semihosting = { version = "0.5" }
critical-section = { version = "1.2.0" }
featurecomb = "0.1.3"
# Disabling default features may reduce the code size by not providing atomics
# for types larger than the pointer width, which we do not use.
portable-atomic = { version = "1.11.0", default-features = false, features = [
  "require-cas",
] }
semihosting = { version = "0.1.16", default-features = false }

embassy-embedded-hal = { version = "0.3.0", default-features = false }
embassy-executor = { version = "0.7.0", default-features = false }
embassy-futures = { version = "0.1.1", default-features = false }
embassy-hal-internal = { version = "0.2.0", default-features = false }
embassy-net = { version = "0.6", default-features = false }
embassy-net-driver-channel = { version = "0.3.0", default-features = false }
embassy-nrf = { version = "0.3.1", default-features = false }
embassy-rp = { version = "0.4", default-features = false }
embassy-stm32 = { version = "0.2", default-features = false }
embassy-sync = { version = "0.6.1", default-features = false }
embassy-time = { version = "0.4.0", default-features = false }
embassy-usb = { version = "0.4.0", default-features = false }

embedded-hal = { version = "1.0.0", default-features = false }
embedded-hal-async = { version = "1.0.0", default-features = false }
embedded-io = { version = "0.6.1", default-features = false }
embedded-io-async = { version = "0.6.1", default-features = false }
embedded-nal-coap = "0.1.0-alpha.4"
embedded-storage = { version = "0.3.1" }
embedded-storage-async = { version = "0.4.1" }
embedded-test = { version = "0.6.1", default-features = false, features = [
  "ariel-os",
] }

esp-alloc = { version = "0.6.0", default-features = false }
esp-hal = { version = "0.23.1", default-features = false, features = [
  "unstable",
] }
esp-hal-embassy = { version = "0.6.0", default-features = false }
esp-println = { version = "0.13.0", default-features = false }
esp-wifi = { version = "0.12.0", default-features = false }
esp-wifi-sys = { version = "0.7.1", default-features = false }

esp-storage = { version = "0.7.0" }
xtensa-lx-rt = { version = "0.18.0", default-features = false }

linkme = { version = "0.3.32" }

ariel-os = { path = "src/ariel-os", default-features = false }
ariel-os-alloc = { path = "src/ariel-os-alloc", default-features = false }
ariel-os-bench = { path = "src/ariel-os-bench", default-features = false }
ariel-os-boards = { path = "src/ariel-os-boards", default-features = false }
ariel-os-buildinfo = { path = "src/ariel-os-buildinfo", default-features = false }
ariel-os-coap = { path = "src/ariel-os-coap", default-features = false }
ariel-os-debug = { path = "src/ariel-os-debug", default-features = false }
ariel-os-debug-log = { path = "src/ariel-os-debug-log", default-features = false }
ariel-os-embassy = { path = "src/ariel-os-embassy", default-features = false }
ariel-os-embassy-common = { path = "src/ariel-os-embassy-common" }
ariel-os-esp = { path = "src/ariel-os-esp" }
ariel-os-hal = { path = "src/ariel-os-hal", default-features = false }
ariel-os-identity = { path = "src/ariel-os-identity" }
ariel-os-macros = { path = "src/ariel-os-macros" }
ariel-os-nrf = { path = "src/ariel-os-nrf" }
ariel-os-power = { path = "src/ariel-os-power" }
ariel-os-random = { path = "src/ariel-os-random" }
ariel-os-rp = { path = "src/ariel-os-rp" }
ariel-os-rt = { path = "src/ariel-os-rt" }
ariel-os-runqueue = { path = "src/ariel-os-runqueue" }
ariel-os-sensors = { path = "src/ariel-os-sensors" }
ariel-os-stm32 = { path = "src/ariel-os-stm32" }
ariel-os-storage = { path = "src/ariel-os-storage" }
ariel-os-threads = { path = "src/ariel-os-threads" }
ariel-os-utils = { path = "src/ariel-os-utils", default-features = false }

const_panic = { version = "0.2.8", default-features = false }
const-str = "0.7.0"
defmt = { version = "1.0.0" }
document-features = "0.2.8"
fugit = { version = "0.3.7", default-features = false }
heapless = { version = "0.8.0", default-features = false }
ld-memory = { version = "0.2.9" }
log = { version = "0.4.20", default-features = false }
once_cell = { version = "=1.19.0", default-features = false, features = [
  "critical-section",
] }
paste = { version = "1.0" }
pin-project = "1.1.10"
rand = { version = "0.8.5", default-features = false }
rand_core = { version = "0.6.4", default-features = false }
rtt-target = { version = "0.6.0" }

rp-pac = { version = "7.0", default-features = false }
serde = { version = "1.0.197", default-features = false }
static_cell = { version = "2.1.1", default-features = false }
trouble-host = "0.1"
bt-hci = { version = "0.2.0" }
nrf-sdc = { git = "https://github.com/ariel-os/nrf-sdc.git", rev = "8ce4780b691ec6850b05a0382cef395846b67e02" }

nrf-modem = { version = "0.7.3" }
tinyrlibc = "0.5.0"
futures = { version = "0.3.31", default-features = false }

[workspace.lints.rust]
# rustc lints are documented here: https://doc.rust-lang.org/rustc/lints/listing/index.html
private_interfaces = "deny"
private_bounds = "deny"
rust_2018_idioms = { level = "warn", priority = -1 }
unsafe_op_in_unsafe_fn = "deny"
unused_must_use = "deny"
# ... until we figure out a way to generate a list of all used cfg variables
# across build configurations ...
unexpected_cfgs = "allow"
# When writing code, explicitly opt-out per module by adding `#[expect(unsafe_code)]`
unsafe_code = "warn"

[workspace.lints.clippy]
# Clippy lints are documented here: https://rust-lang.github.io/rust-clippy/master/index.html
collapsible_if = "allow" # We can remove this when we bump the MSRV to 1.89 or higher.
indexing_slicing = "deny"
missing_safety_doc = { level = "warn" }
pedantic = { level = "warn", priority = -1 }
too_long_first_doc_paragraph = "warn"
unused_result_ok = "deny"
unused_trait_names = "warn"
undocumented_unsafe_blocks = "warn"

[workspace.lints.rustdoc]
broken_intra_doc_links = "deny"
