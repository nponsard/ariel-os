[package]
name = "ariel-os-rt"
version = "0.2.0"
license.workspace = true
edition.workspace = true

[lints]
workspace = true

[dependencies]
cfg-if.workspace = true
linkme.workspace = true
ariel-os-alloc = { workspace = true, optional = true }
ariel-os-debug.workspace = true
ariel-os-threads = { path = "../ariel-os-threads", optional = true }
ariel-os-utils = { workspace = true }

[build-dependencies]
rustflags = "0.1"

[target.'cfg(context = "cortex-m")'.dependencies]
cortex-m = { workspace = true }
cortex-m-rt = { workspace = true }

# No CAS instructions on Cortex-M0+.
[target.'cfg(context = "cortex-m0-plus")'.dependencies]
portable-atomic = { workspace = true, features = ["critical-section"] }

[target.'cfg(context = "rp")'.dependencies]
embassy-rp = { workspace = true }

[target.'cfg(context = "esp")'.dependencies]
esp-hal = { workspace = true, default-features = false }
portable-atomic = { workspace = true }

[target.'cfg(context = "nrf")'.dependencies]
cortex-m = { workspace = true, features = [
  # "critical-section-single-core"
  ] }

[target.'cfg(context = "stm32")'.dependencies]
cortex-m = { workspace = true, features = ["critical-section-single-core"] }

[features]
alloc = ["dep:ariel-os-alloc"]
threading = ["dep:ariel-os-threads"]

debug-console = ["ariel-os-debug/debug-console"]
executor-single-thread = []
executor-interrupt = []
panic-printing = []
_panic-handler = []
single-core = [
  # "cortex-m/critical-section-single-core"
  ]
multi-core = ["embassy-rp/critical-section-impl"]
