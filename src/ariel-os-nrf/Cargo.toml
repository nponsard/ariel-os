[package]
name = "ariel-os-nrf"
version = "0.2.0"
license.workspace = true
edition.workspace = true
repository.workspace = true

[lints]
workspace = true

[dependencies]
cfg-if = { workspace = true }
defmt = { workspace = true, optional = true }
embassy-embedded-hal = { workspace = true, optional = true }
embassy-executor = { workspace = true, default-features = false, features = [
  "arch-cortex-m",
] }
embassy-nrf = { workspace = true, default-features = false, features = [
  "optfield",
  "time-driver-rtc1",
  "time",
  "unstable-pac",
  "rt",
] }
embedded-hal-async = { workspace = true }
paste = { workspace = true }
portable-atomic = { workspace = true }
ariel-os-debug = { workspace = true }
ariel-os-embassy-common = { workspace = true }
ariel-os-random = { workspace = true, optional = true }
ariel-os-rt = { workspace = true, features = ["memory-x"] }
static_cell = { workspace = true }
embassy-sync = { workspace = true }
trouble-host = { workspace = true, optional = true }

[target.'cfg(context = "nrf51822-xxaa")'.dependencies]
embassy-nrf = { workspace = true, features = ["nrf51"] }

[target.'cfg(context = "nrf52832")'.dependencies]
# Disable NFC support for now, as we do not support it yet.
embassy-nrf = { workspace = true, features = ["nfc-pins-as-gpio", "nrf52832"] }
nrf-sdc = { workspace = true, features = ["nrf52832"], optional = true }

[target.'cfg(context = "nrf52833")'.dependencies]
# Disable NFC support for now, as we do not support it yet.
embassy-nrf = { workspace = true, features = ["nfc-pins-as-gpio", "nrf52833"] }
nrf-sdc = { workspace = true, features = ["nrf52833"], optional = true }

[target.'cfg(context = "nrf52840")'.dependencies]
# Disable NFC support for now, as we do not support it yet.
embassy-nrf = { workspace = true, features = ["nfc-pins-as-gpio", "nrf52840"] }
nrf-sdc = { workspace = true, features = ["nrf52840"], optional = true }

[target.'cfg(context = "nrf5340")'.dependencies]
# Disable NFC support for now, as we do not support it yet.
embassy-nrf = { workspace = true, features = [
  "nfc-pins-as-gpio",
  "nrf5340-app-s",
] }

[target.'cfg(context = "nrf5340-net")'.dependencies]
embassy-nrf = { workspace = true, features = ["nrf5340-net"] }

[target.'cfg(context = "nrf9151")'.dependencies]
embassy-nrf = { workspace = true, features = ["nrf9151-s"] }

[target.'cfg(context = "nrf9160")'.dependencies]
embassy-nrf = { workspace = true, features = ["nrf9160-s"] }

[features]
## Enables GPIO interrupt support.
external-interrupts = [
  "embassy-nrf/gpiote",
  "ariel-os-embassy-common/external-interrupts",
]

## Enables seeding the random number generator from hardware.
hwrng = ["dep:ariel-os-random"]

## Enables I2C support.
i2c = ["ariel-os-embassy-common/i2c"]

## Enables SPI support.
spi = ["ariel-os-embassy-common/spi"]

## Enables storage support.
storage = ["dep:embassy-embedded-hal"]

## Enables USB support.
usb = []

## Enables BLE support.
ble = [
  "dep:nrf-sdc",
  "dep:trouble-host",
  "hwrng",
  "ariel-os-embassy-common/ble",
  "ariel-os-random/csprng",
]
ble-peripheral = ["ble", "nrf-sdc/peripheral"]
ble-central = ["ble", "nrf-sdc/central"]

## Enables defmt support.
defmt = ["dep:defmt", "embassy-nrf/defmt", "nrf-sdc?/defmt"]

## Enables the interrupt executor.
executor-interrupt = ["embassy-executor/executor-interrupt"]

_test = ["embassy-nrf/nrf52840", "external-interrupts", "i2c", "spi"]
